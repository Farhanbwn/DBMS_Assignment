

4)




5)




6)
create table fact(N number, fac number);


declare
x number(10):= :Enter_a_number;
z number(10):=1;
n number:=x;
begin
loop
z:=z*remainder(n,10);
n:=n-1;
if(n=0) then
dbms_output.put_line('Factorial is: '||z);
insert into fact values(x,z);
exit;
end if;
end loop;
end;



7)
declare
val number(10):= :Enter_a_number;
temp number:=0;
begin
for i in 2..val-1 loop
if(remainder(val,i)=0)
then 
dbms_output.put_line('This is not a Prime number');
temp:=1;
exit;
end if;
end loop;
if(temp=0) then
dbms_output.put_line('This is a Prime number');
end if;
end;



8)
declare
a number:=0;
b number:=1;
c number:=0;
x number := :Enter_Fibonacci_length;
begin
for i in 1..x loop
a:=b;
b:=c;
dbms_output.put_line(c);
c:=a+b;
end loop;
end;



9)
declare
x number(10):= :Enter_a_number;
z number(10):=0;
n number:=0;
v number :=0;
begin
loop
if(x=0) then
dbms_output.put_line('number of the Digit is: '||n);
dbms_output.put_line('Sum of the Digit is: '||z);
for i in 2..z-1 loop 
if(remainder(z,i)=0) then 
dbms_output.put_line('This is not a Prime number'); 
v:=1; 
exit; 
end if; 
end loop; 
if(v=0) then 
dbms_output.put_line('This is a Prime number'); 
end if;
exit;
end if;
z:=z+remainder(x,10);
x:=x/10;
n:=n+1;
end loop;
end;



10)
declare
x number(10):= :Enter_a_number;
z number(10):=0;
v number:=x;
a number:=0;
b number;
begin
while x > 0 loop
x:=x/10;
a:=a+1;
end loop;
x:=v;
while x > 0 loop
b:=mod(x,10);
x:=trunc(x/10);
z:=z+power(b,a);
end loop;
if(v=z) then
dbms_output.put_line('This is a Amstrong number');
else
dbms_output.put_line('This is not a Amstrong number');
end if;
end;

11)
declare
x varchar2(100):=:Enter_your_name;
z number;
len number;
begin
z:=instr(x,' ');
len:=length(x);
dbms_output.put_line(initcap(substr(x,1,1))||'.'||initcap(substr(x,z+1,len-z)));
end;
